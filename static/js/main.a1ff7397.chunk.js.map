{"version":3,"sources":["screens/SelectGroupScreen.tsx","screens/GameListScreen.tsx","screens/GameDetailsScreen.tsx","actions/SaveGameAction.ts","screens/AddGameScreen.tsx","store.ts","index.tsx","App.tsx"],"names":["connect","state","groups","props","react","map","group","key","id","react_router_dom","to","concat","name","ownProps","match","find","params","groupId","_ref","games","game","players","winner","score","gameId","undefined","SAVE_GAME","Object","objectSpread","onSave","dispatch","type","payload","saveGame","history","_React$useState","React","_React$useState2","slicedToArray","player1","setPlayer1","_React$useState3","_React$useState4","player2","setPlayer2","_React$useState5","_React$useState6","score1","setScore1","_React$useState7","_React$useState8","score2","setScore2","_React$useState9","_React$useState10","setWinner","value","onChange","event","target","checked","parseInt","onClick","push","dummyData","store","createStore","arguments","length","action","Error","toConsumableArray","slice","indexOf","String","Date","now","ReactDOM","render","react_default","a","createElement","es","react_router","path","exact","component","SelectGroupScreen","GameListScreen","GameDetailsScreen","AddGameScreen","document","getElementById"],"mappings":"+LA2BeA,kBANf,SAAyBC,GACxB,MAAO,CACNC,OAAQD,EAAMC,SAIDF,CAlBf,SAA2BG,GAC1B,OACCC,EAAA,wBACED,EAAMD,OAAOG,IAAI,SAAAC,GAAK,OACtBF,EAAA,oBAAIG,IAAKD,EAAME,IACdJ,EAAA,cAACK,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAYL,EAAME,KAAOF,EAAMM,YC0B7BZ,kBAPf,SAAyBC,EAAcY,GACtC,MAAO,CACNC,MAAOD,EAASC,MAChBR,MAAOL,EAAMC,OAAOa,KAAK,SAAAT,GAAK,OAAIA,EAAME,KAAOK,EAASC,MAAME,OAAOC,YAIxDjB,CA9Bf,SAAAkB,GAA0C,IAAhBZ,EAAgBY,EAAhBZ,MACzB,OAAKA,EAIJF,EAAA,yBACCA,EAAA,wBAAKE,EAAMM,MACXR,EAAA,wBACEE,EAAMa,MAAMd,IAAI,SAAAe,GAAI,OACpBhB,EAAA,oBAAIG,IAAKa,EAAKZ,IACZY,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,MADxC,IACgDF,EAAKG,OAASH,EAAKG,MAAM,GADzE,KAEEH,EAAKG,OAASH,EAAKG,MAAM,GAF3B,IAEgCH,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,MACrElB,EAAA,cAACK,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAYL,EAAME,GAAlB,WAAAG,OAA8BS,EAAKZ,KAA3C,eAKHJ,EAAA,cAACK,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAYL,EAAME,GAAlB,SAAR,iBAfOJ,EAAA,6CCyBKJ,kBAVf,SAAyBC,EAAcY,GACtC,IAAMP,EAAQL,EAAMC,OAAOa,KAAK,SAAAT,GAAK,OAAIA,EAAME,KAAOK,EAASC,MAAME,OAAOC,UACtEG,EAAOd,EAAQA,EAAMa,MAAMJ,KAAK,SAAAK,GAAI,OAAIA,EAAKZ,KAAOK,EAASC,MAAME,OAAOQ,cAAUC,EAC1F,MAAO,CACNX,MAAOD,EAASC,MAChBR,QACAc,SAIapB,CA1Bf,SAAAkB,GAAmD,IAAtBZ,EAAsBY,EAAtBZ,MAAOc,EAAeF,EAAfE,KACnC,OAAKd,GAAUc,EAIdhB,EAAA,yBACCA,EAAA,wBAAKE,EAAMM,KAAX,mBACAR,EAAA,oBAAIG,IAAKa,EAAKZ,IACZY,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,MADxC,IACgDF,EAAKG,OAASH,EAAKG,MAAM,GADzE,KAEIH,EAAKG,OAASH,EAAKG,MAAM,GAF7B,IAEkCH,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,QAPjElB,EAAA,4DCXGsB,EAAY,YCyDV1B,kBAdf,SAAyBC,EAAcY,GACtC,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GACHd,EADJ,CAECP,MAAOL,EAAMC,OAAOa,KAAK,SAAAT,GAAK,OAAIO,EAASC,OAASR,EAAME,KAAOK,EAASC,MAAME,OAAOC,UACvFY,OAAQhB,EAASgB,UAInB,SAA8BC,EAAoBjB,GACjD,MAAO,CACNgB,OAAQ,SAACT,GAAD,OAAmBU,ED3Cd,SAAkBV,EAAeH,GAC/C,MAAO,CACNc,KAAM,YACNC,QAAS,CACRZ,OACAH,YCsCmCgB,CAASb,EAAMP,EAASC,OAASD,EAASC,MAAME,OAAOC,SAAW,QAIzFjB,CA/Cf,SAAAkB,GAA0D,IAAjCZ,EAAiCY,EAAjCZ,MAAOuB,EAA0BX,EAA1BW,OAAQK,EAAkBhB,EAAlBgB,QAAkBC,EAC3BC,WAAe,IADYC,EAAAV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,GAClDI,EADkDF,EAAA,GACzCG,EADyCH,EAAA,GAAAI,EAE3BL,WAAe,IAFYM,EAAAf,OAAAW,EAAA,EAAAX,CAAAc,EAAA,GAElDE,EAFkDD,EAAA,GAEzCE,EAFyCF,EAAA,GAAAG,EAG7BT,WAAe,GAHcU,EAAAnB,OAAAW,EAAA,EAAAX,CAAAkB,EAAA,GAGlDE,EAHkDD,EAAA,GAG1CE,EAH0CF,EAAA,GAAAG,EAI7Bb,WAAe,GAJcc,EAAAvB,OAAAW,EAAA,EAAAX,CAAAsB,EAAA,GAIlDE,EAJkDD,EAAA,GAI1CE,EAJ0CF,EAAA,GAAAG,EAK7BjB,WAAsB,GALOkB,EAAA3B,OAAAW,EAAA,EAAAX,CAAA0B,EAAA,GAKlD/B,EALkDgC,EAAA,GAK1CC,EAL0CD,EAAA,GAMzD,OAAKhD,EAIJF,EAAA,yBACCA,EAAA,wBAAKE,EAAMM,KAAX,qBACAR,EAAA,mCACAA,EAAA,uBAAO2B,KAAK,OAAOyB,MAAOjB,EAASkB,SAAU,SAAAC,GAAK,OAAIlB,EAAWkB,EAAMC,OAAOH,UAC9EpD,EAAA,uBAAO2B,KAAK,QAAQnB,KAAK,SAAS4C,MAAM,IAAII,QAAoB,IAAXtC,EAAcmC,SAAU,SAAAC,GAAK,MAA2B,MAAvBA,EAAMC,OAAOH,OAAiBD,EAAU,MAC9HnD,EAAA,mCACAA,EAAA,uBAAO2B,KAAK,OAAOyB,MAAOb,EAASc,SAAU,SAAAC,GAAK,OAAId,EAAWc,EAAMC,OAAOH,UAC9EpD,EAAA,uBAAO2B,KAAK,QAAQnB,KAAK,SAAS4C,MAAM,IAAII,QAAoB,IAAXtC,EAAcmC,SAAU,SAAAC,GAAK,MAA2B,MAAvBA,EAAMC,OAAOH,OAAiBD,EAAU,MAC9HnD,EAAA,gCACAA,EAAA,uBAAO2B,KAAK,SAASyB,MAAOT,EAAQU,SAAU,SAAAC,GAAK,OAAIV,EAAUa,SAASH,EAAMC,OAAOH,MAAO,QAT/F,KAUCpD,EAAA,uBAAO2B,KAAK,SAASyB,MAAOL,EAAQM,SAAU,SAAAC,GAAK,OAAIN,EAAUS,SAASH,EAAMC,OAAOH,MAAO,QAC9FpD,EAAA,wBAAQ0D,QAAS,WAChBjC,EAAO,CACNR,QAAS,CAACkB,EAASI,GACnBrB,SACAC,MAAO,CAACwB,EAAQI,KAEjBjB,EAAQ6B,KAAR,UAAApD,OAAuBL,EAAME,OAN9B,SAdOJ,EAAA,iECfJ4D,EAAmB,CACxB9D,OAAQ,CACP,CACCU,KAAM,QACNJ,GAAI,sBACJa,QAAS,CAAC,SAAU,SACpBF,MAAO,CAAC,CACPE,QAAS,CAAC,SAAU,SACpBE,MAAO,KACPD,OAAQ,EACRd,GAAI,SACF,CACFa,QAAS,CAAC,SAAU,SACpBE,MAAO,KACPD,OAAQ,EACRd,GAAI,UACF,CACFa,QAAS,CAAC,SAAU,SACpBE,MAAO,KACPD,OAAQ,EACRd,GAAI,WAEH,CACFI,KAAM,KACNJ,GAAI,2BACJa,QAAS,CAAC,KAAM,UAChBF,MAAO,CAAC,CACPE,QAAS,CAAC,KAAM,UAChBE,MAAO,CAAC,GAAI,GACZD,OAAQ,EACRd,GAAI,YACF,CACFa,QAAS,CAAC,KAAM,UAChBE,MAAO,CAAC,EAAG,IACXD,OAAQ,EACRd,GAAI,eACF,CACFa,QAAS,CAAC,SAAU,MACpBE,MAAO,CAAC,EAAG,IACXD,OAAQ,EACRd,GAAI,iBAmCR,IACeyD,EADDC,YA1Bd,WAAuE,IAAtDjE,EAAsDkE,UAAAC,OAAA,QAAA3C,IAAA0C,UAAA,GAAAA,UAAA,GAAvCH,EAAWK,EAA4BF,UAAAC,OAAA,EAAAD,UAAA,QAAA1C,EACtE,OAAQ4C,EAAOtC,MACd,KAAKL,EACJ,IAAMpB,EAAQL,EAAMC,OAAOa,KAAK,SAAAT,GAAK,OAAIA,EAAME,KAAO6D,EAAOrC,QAAQf,UACrE,IAAKX,EACJ,MAAM,IAAIgE,MAAM,gCAEjB,OAAO3C,OAAAC,EAAA,EAAAD,CAAA,GACH1B,EADJ,CAECC,OAAM,GAAAS,OAAAgB,OAAA4C,EAAA,EAAA5C,CACF1B,EAAMC,OAAOsE,MAAM,EAAGvE,EAAMC,OAAOuE,QAAQnE,KADzC,CAAAqB,OAAAC,EAAA,EAAAD,CAAA,GAGDrB,EAHC,CAIJa,MAAK,GAAAR,OAAAgB,OAAA4C,EAAA,EAAA5C,CAAMrB,EAAMa,OAAZ,CAAAQ,OAAAC,EAAA,EAAAD,CAAA,GACD0C,EAAOrC,QAAQZ,KADd,CAEJZ,GAAIkE,OAAOC,KAAKC,cANbjD,OAAA4C,EAAA,EAAA5C,CASF1B,EAAMC,OAAOsE,MAAMvE,EAAMC,OAAOuE,QAAQnE,GAAS,OAGvD,QACC,OAAOL,KCrEV4E,IAASC,OACRC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUjB,MAAOA,GAChBc,EAAAC,EAAAC,cCDa,WACd,OACCF,EAAAC,EAAAC,cAACxE,EAAA,EAAD,KACCsE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjCR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACC,UAAWE,IAC/CT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,gCAAgCC,OAAK,EAACC,UAAWG,IAC7DV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,sBAAsBC,OAAK,EAACC,UAAWI,MDLpD,OAECC,SAASC,eAAe","file":"static/js/main.a1ff7397.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { State, Group } from '../types';\nimport { connect } from 'react-redux';\n\ninterface Props {\n\tgroups: Group[]\n};\n\nfunction SelectGroupScreen(props: Props) {\n\treturn (\n\t\t<ul>\n\t\t\t{props.groups.map(group => (\n\t\t\t\t<li key={group.id}>\n\t\t\t\t\t<Link to={`/group/${group.id}`}>{group.name}</Link>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nfunction mapStateToProps(state: State): Props {\n\treturn {\n\t\tgroups: state.groups\n\t}\n}\n\nexport default connect(mapStateToProps)(SelectGroupScreen);","import * as React from 'react';\nimport { Link, match } from 'react-router-dom';\nimport { State, Group } from '../types';\nimport { connect } from 'react-redux';\n\ninterface Props {\n\tmatch: match<{ groupId: string }>,\n\tgroup?: Group\n};\n\nfunction GameListScreen({ group }: Props) {\n\tif (!group) {\n\t\treturn (<h1>Group not found</h1>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{group.name}</h1>\n\t\t\t<ul>\n\t\t\t\t{group.games.map(game => (\n\t\t\t\t\t<li key={game.id}>\n\t\t\t\t\t\t{game.players[0]}{game.winner === 0 && '(w)'} {game.score && game.score[0]} -\n\t\t\t\t\t\t{game.score && game.score[1]} {game.players[1]}{game.winner === 1 && '(w)'} \n\t\t\t\t\t\t<Link to={`/group/${group.id}/games/${game.id}`}>Details</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\n\t\t\t<Link to={`/group/${group.id}/add`}>Add new game</Link>\n\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\treturn {\n\t\tmatch: ownProps.match,\n\t\tgroup: state.groups.find(group => group.id === ownProps.match.params.groupId)\n\t}\n}\n\nexport default connect(mapStateToProps)(GameListScreen);","import * as React from 'react';\nimport { match } from 'react-router-dom';\nimport { State, Group, Game } from '../types';\nimport { connect } from 'react-redux';\n\ninterface Props {\n\tmatch: match<{ groupId: string, gameId: string }>,\n\tgroup?: Group,\n\tgame?: Game\n};\n\nfunction GameDetailsScreen({ group, game }: Props) {\n\tif (!group || !game) {\n\t\treturn (<h1>Game not found</h1>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{group.name} - Game details</h1>\n\t\t\t<li key={game.id}>\n\t\t\t\t{game.players[0]}{game.winner === 0 && '(w)'} {game.score && game.score[0]} -\n\t\t\t\t\t\t{game.score && game.score[1]} {game.players[1]}{game.winner === 1 && '(w)'}\n\t\t\t</li>\n\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\tconst group = state.groups.find(group => group.id === ownProps.match.params.groupId);\n\tconst game = group ? group.games.find(game => game.id === ownProps.match.params.gameId) : undefined;\n\treturn {\n\t\tmatch: ownProps.match,\n\t\tgroup,\n\t\tgame \n\t};\n}\n\nexport default connect(mapStateToProps)(GameDetailsScreen);","import { NewGame } from \"../types\";\n\nexport const SAVE_GAME = 'SAVE_GAME';\n\nexport interface SaveGameAction {\n\ttype: typeof SAVE_GAME\n\tpayload: {\n\t\tgame: NewGame,\n\t\tgroupId: string\n\t}\n}\n\nexport default function saveGame(game: NewGame, groupId: string): SaveGameAction {\n\treturn {\n\t\ttype: 'SAVE_GAME',\n\t\tpayload: {\n\t\t\tgame,\n\t\t\tgroupId\n\t\t}\n\t}\n}","import * as React from 'react';\nimport { State, Group, NewGame } from '../types';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport saveGame from '../actions/SaveGameAction';\nimport { RouteChildrenProps } from 'react-router';\n\ninterface Props extends RouteChildrenProps<{ groupId: string }> {\n\tgroup?: Group,\n\tonSave: (game: NewGame) => void \n};\n\nfunction AddGameScreen({ group, onSave, history }: Props) {\n\tconst [player1, setPlayer1] = React.useState('');\n\tconst [player2, setPlayer2] = React.useState('');\n\tconst [score1, setScore1] = React.useState(0);\n\tconst [score2, setScore2] = React.useState(0);\n\tconst [winner, setWinner] = React.useState<0 | 1>(0);\n\tif (!group) {\n\t\treturn (<h1>Group not found</h1>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{group.name} - Add a new game</h1>\n\t\t\t<p>Player 1</p>\n\t\t\t<input type=\"text\" value={player1} onChange={event => setPlayer1(event.target.value)} />\n\t\t\t<input type=\"radio\" name=\"winner\" value=\"0\" checked={winner === 0} onChange={event => event.target.value === '0' && setWinner(0)} />\n\t\t\t<p>Player 2</p>\n\t\t\t<input type=\"text\" value={player2} onChange={event => setPlayer2(event.target.value)} />\n\t\t\t<input type=\"radio\" name=\"winner\" value=\"1\" checked={winner === 1} onChange={event => event.target.value === '1' && setWinner(1)} />\n\t\t\t<p>Score</p>\n\t\t\t<input type=\"number\" value={score1} onChange={event => setScore1(parseInt(event.target.value, 10))} /> - \n\t\t\t<input type=\"number\" value={score2} onChange={event => setScore2(parseInt(event.target.value, 10))} />\n\t\t\t<button onClick={() => {\n\t\t\t\tonSave({\n\t\t\t\t\tplayers: [player1, player2],\n\t\t\t\t\twinner,\n\t\t\t\t\tscore: [score1, score2]\n\t\t\t\t})\n\t\t\t\thistory.push(`/group/${group.id}`);\n\t\t\t}}>Save</button>\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\treturn {\n\t\t...ownProps,\n\t\tgroup: state.groups.find(group => ownProps.match && group.id === ownProps.match.params.groupId),\n\t\tonSave: ownProps.onSave\n\t}\n}\n\nfunction matchDispatchToProps(dispatch: Dispatch, ownProps: Props) {\n\treturn {\n\t\tonSave: (game: NewGame) => dispatch(saveGame(game, ownProps.match && ownProps.match.params.groupId || ''))\n\t}\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(AddGameScreen);","import { createStore } from 'redux'\nimport { State } from './types';\nimport { SaveGameAction, SAVE_GAME } from './actions/SaveGameAction';\n\nconst dummyData: State = {\n\tgroups: [\n\t\t{\n\t\t\tname: 'Chess',\n\t\t\tid: 'nc130nclkdac13oncas',\n\t\t\tplayers: ['Viktor', 'Marci'],\n\t\t\tgames: [{\n\t\t\t\tplayers: ['Viktor', 'Marci'],\n\t\t\t\tscore: null,\n\t\t\t\twinner: 0,\n\t\t\t\tid: 'dacas'\n\t\t\t}, {\n\t\t\t\tplayers: ['Viktor', 'Marci'],\n\t\t\t\tscore: null,\n\t\t\t\twinner: 1,\n\t\t\t\tid: 'xacxxz'\n\t\t\t}, {\n\t\t\t\tplayers: ['Viktor', 'Marci'],\n\t\t\t\tscore: null,\n\t\t\t\twinner: 1,\n\t\t\t\tid: 'cascz'\n\t\t\t}]\n\t\t}, {\n\t\t\tname: 'Go',\n\t\t\tid: 'asasca2csalmcsac13noiubc',\n\t\t\tplayers: ['Ed', 'Viktor'],\n\t\t\tgames: [{\n\t\t\t\tplayers: ['Ed', 'Viktor'],\n\t\t\t\tscore: [15, 3],\n\t\t\t\twinner: 0,\n\t\t\t\tid: 'cazazcac'\n\t\t\t}, {\n\t\t\t\tplayers: ['Ed', 'Viktor'],\n\t\t\t\tscore: [6, 18],\n\t\t\t\twinner: 1,\n\t\t\t\tid: 'ascascivavs'\n\t\t\t}, {\n\t\t\t\tplayers: ['Viktor', 'Ed'],\n\t\t\t\tscore: [9, 11],\n\t\t\t\twinner: 1,\n\t\t\t\tid: 'casvdv3fd'\n\t\t\t}]\n\t\t}\n\t]\n}\n\ntype ActionTypes = SaveGameAction;\n\t\n\nfunction reducer(state: State = dummyData, action: ActionTypes): State {\n\tswitch (action.type) {\n\t\tcase SAVE_GAME:\n\t\t\tconst group = state.groups.find(group => group.id === action.payload.groupId);\n\t\t\tif (!group) {\n\t\t\t\tthrow new Error('Didn\\'t find group in reducer');\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgroups: [\n\t\t\t\t\t...state.groups.slice(0, state.groups.indexOf(group)),\n\t\t\t\t\t{\n\t\t\t\t\t\t...group,\n\t\t\t\t\t\tgames: [...group.games, {\n\t\t\t\t\t\t\t...action.payload.game,\n\t\t\t\t\t\t\tid: String(Date.now())\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t...state.groups.slice(state.groups.indexOf(group) + 1)\n\t\t\t\t]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst store = createStore(reducer);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nReactDOM.render((\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n), document.getElementById('root'));\n\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport SelectGroupScreen from './screens/SelectGroupScreen';\nimport GameListScreen from './screens/GameListScreen';\nimport GameDetailsScreen from './screens/GameDetailsScreen';\nimport AddGameScreen from './screens/AddGameScreen';\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Route path=\"/\" exact component={SelectGroupScreen} />\n\t\t\t<Route path=\"/group/:groupId\" exact component={GameListScreen} />\n\t\t\t<Route path=\"/group/:groupId/games/:gameId\" exact component={GameDetailsScreen} />\t\t\n\t\t\t<Route path=\"/group/:groupId/add\" exact component={AddGameScreen} />\t\t\n\t\t</Router>\n\t)\n}"],"sourceRoot":""}