{"version":3,"sources":["actions/FetchStartAction.ts","getUrl.ts","actions/FetchGroupsAction.ts","components/GroupComponent.tsx","style-variables.ts","screens/SelectGroupScreen.tsx","actions/FetchGroupAction.ts","screens/GameListScreen.tsx","screens/GameDetailsScreen.tsx","actions/SaveGameAction.ts","screens/AddGameScreen.tsx","App.tsx","store.ts","index.tsx"],"names":["FETCH_START","fetchStart","url","type","payload","getUrl","window","location","hostname","concat","FETCH_GROUPS","GROUPS_URL","Container","styled","li","_templateObject","GroupComponent","props","react","react_router_dom","to","id","name","connect","state","ownProps","Object","objectSpread","groups","dispatch","getGroups","fetch","then","response","json","useEffect","map","group","assign","key","FETCH_GROUP","match","find","parseInt","params","groupId","getGroup","fetchGroup","_ref","React","games","game","players","winner","score","gameId","undefined","SAVE_GAME","onSave","method","body","JSON","stringify","headers","Content-Type","console","log","catch","message","alert","saveGame","history","_React$useState","_React$useState2","slicedToArray","player1","setPlayer1","_React$useState3","_React$useState4","player2","setPlayer2","_React$useState5","_React$useState6","score1","setScore1","_React$useState7","_React$useState8","score2","setScore2","_React$useState9","_React$useState10","setWinner","value","onChange","event","target","checked","onClick","push","isLoading","react_default","a","createElement","Fragment","react_router","path","exact","component","SelectGroupScreen","GameListScreen","GameDetailsScreen","AddGameScreen","dummyData","loadingResource","store","createStore","arguments","length","action","Error","toConsumableArray","slice","indexOf","Date","now","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"uMAAaA,EAAc,cAOZ,SAASC,EAAWC,GAClC,MAAO,CACNC,KAAM,cACNC,QAASF,GCVI,SAASG,EAAOH,GAC9B,MAAoC,cAA7BI,OAAOC,SAASC,SAAhB,wBAAAC,OAAmEP,GAAnE,wCAAAO,OAAmHP,GCIpH,IAAMQ,EAAe,eACfC,EAAaN,EAAO,wHCAjC,IAAMO,QAAYC,EAAOC,GAAVC,ICLN,WDSM,SAASC,EAAeC,GACtC,OACCC,EAAA,cAACN,EAAD,KACCM,EAAA,cAACC,EAAA,EAAD,CAAMC,GAAE,UAAAX,OAAYQ,EAAMI,KAAOJ,EAAMK,OE4B3BC,kBAff,SAAyBC,EAAcC,GACtC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHD,EADJ,CAECG,OAAQJ,EAAMI,UAKhB,SAA8BC,EAAsCJ,GACnE,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHD,EADJ,CAECK,UAAW,kBAAMD,EHpBX,SAACA,GACPA,EAAS5B,EAAWU,IACpBoB,MAAMpB,GACJqB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACLJ,EAAS,CACR1B,KAAM,eACNC,QAAS,CACRF,IAAKS,EACLiB,OAAQK,aGeCV,CA1Bf,SAA2BN,GAE1B,OADAkB,oBAAU,kBAAMlB,EAAMa,aAAa,IAElCZ,EAAA,wBACED,EAAMW,OAAOQ,IAAI,SAAAC,GAAK,OACtBnB,EAAA,cAACF,EAADU,OAAAY,OAAA,CAAgBC,IAAKF,EAAMhB,IAAQgB,SCf1BG,EAAc,cC+CZjB,kBAff,SAAyBC,EAAcC,GACtC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHD,EADJ,CAECgB,MAAOhB,EAASgB,MAChBJ,MAAOb,EAAMI,OAAOc,KAAK,SAAAL,GAAK,OAAIA,EAAMhB,KAAOsB,SAASlB,EAASgB,MAAMG,OAAOC,QAAS,SAIzF,SAA8BhB,EAAsCJ,GACnE,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHD,EADJ,CAECqB,SAAU,kBAAMjB,EDjCH,SAAoBR,GAClC,IAAMnB,EAAMG,EAAM,WAAAI,OAAYY,IAC9B,OAAO,SAACQ,GACPA,EAAS5B,EAAWC,IACpB6B,MAAM7B,GACJ8B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACLJ,EAAS,CACR1B,KAAM,cACNC,QAAS,CACRF,MACAmC,MAAOJ,QCsBcc,CAAWtB,EAASgB,MAAMG,OAAOC,cAI7CtB,CAvCf,SAAAyB,GAAoD,IAA1BX,EAA0BW,EAA1BX,MAAOS,EAAmBE,EAAnBF,SAEhC,OADAG,YAAgB,kBAAMH,KAAY,IAC7BT,EAIJnB,EAAA,yBACCA,EAAA,wBAAKmB,EAAMf,MACXJ,EAAA,wBACEmB,EAAMa,MAAMd,IAAI,SAAAe,GAAI,OACpBjC,EAAA,oBAAIqB,IAAKY,EAAK9B,IACZ8B,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,MADxC,IACgDF,EAAKG,OAASH,EAAKG,MAAM,GADzE,KAEEH,EAAKG,OAASH,EAAKG,MAAM,GAF3B,IAEgCH,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,MACrEnC,EAAA,cAACC,EAAA,EAAD,CAAMC,GAAE,UAAAX,OAAY4B,EAAMhB,GAAlB,WAAAZ,OAA8B0C,EAAK9B,KAA3C,eAKHH,EAAA,cAACC,EAAA,EAAD,CAAMC,GAAE,UAAAX,OAAY4B,EAAMhB,GAAlB,SAAR,iBAfOH,EAAA,6CCqBKK,kBAVf,SAAyBC,EAAcC,GACtC,IAAMY,EAAQb,EAAMI,OAAOc,KAAK,SAAAL,GAAK,OAAIA,EAAMhB,KAAOsB,SAASlB,EAASgB,MAAMG,OAAOC,WAC/EM,EAAOd,EAAQA,EAAMa,MAAMR,KAAK,SAAAS,GAAI,OAAIA,EAAK9B,KAAOsB,SAASlB,EAASgB,MAAMG,OAAOW,eAAWC,EACpG,MAAO,CACNf,MAAOhB,EAASgB,MAChBJ,QACAc,SAIa5B,CA1Bf,SAAAyB,GAAmD,IAAtBX,EAAsBW,EAAtBX,MAAOc,EAAeH,EAAfG,KACnC,OAAKd,GAAUc,EAIdjC,EAAA,yBACCA,EAAA,wBAAKmB,EAAMf,KAAX,mBACAJ,EAAA,oBAAIqB,IAAKY,EAAK9B,IACZ8B,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,MADxC,IACgDF,EAAKG,OAASH,EAAKG,MAAM,GADzE,KAEIH,EAAKG,OAASH,EAAKG,MAAM,GAF7B,IAEkCH,EAAKC,QAAQ,GAAoB,IAAhBD,EAAKE,QAAgB,QAPjEnC,EAAA,oDCRGuC,EAAY,YCsDVlC,kBAdf,SAAyBC,EAAcC,GACtC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHD,EADJ,CAECY,MAAOb,EAAMI,OAAOc,KAAK,SAAAL,GAAK,OAAIZ,EAASgB,OAASJ,EAAMhB,KAAOsB,SAASlB,EAASgB,MAAMG,OAAOC,QAAS,MACzGa,OAAQjC,EAASiC,UAInB,SAA8B7B,EAAsCJ,GACnE,MAAO,CACNiC,OAAQ,SAACP,GAAD,OAAmBtB,EDxCd,SAAkBsB,EAAeN,GAC/C,IAAM3C,EAAMG,EAAM,WAAAI,OAAYoC,EAAZ,SAClB,OAAO,SAAChB,GACPA,EAAS5B,EAAWC,IACpB6B,MAAM7B,EAAK,CACVyD,OAAQ,OACRC,KAAMC,KAAKC,UAALpC,OAAAC,EAAA,EAAAD,CAAA,GACFyB,EADE,CAEL9B,GAAI,KAEL0C,QAAS,CACRC,eAAgB,sBAGhBhC,KAAK,SAAAC,GACLgC,QAAQC,IAAI,WAEZC,MAAM,SAAAC,GAAO,OAAIC,MAAMD,MCuBWE,CAASnB,EAAM1B,EAASgB,OAASE,SAASlB,EAASgB,MAAMG,OAAOC,UAAY,OAInGtB,CA/Cf,SAAAyB,GAA0D,IAAjCX,EAAiCW,EAAjCX,MAAOqB,EAA0BV,EAA1BU,OAAQa,EAAkBvB,EAAlBuB,QAAkBC,EAC3BvB,WAAe,IADYwB,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA8C,EAAA,GAClDG,EADkDF,EAAA,GACzCG,EADyCH,EAAA,GAAAI,EAE3B5B,WAAe,IAFY6B,EAAApD,OAAAgD,EAAA,EAAAhD,CAAAmD,EAAA,GAElDE,EAFkDD,EAAA,GAEzCE,EAFyCF,EAAA,GAAAG,EAG7BhC,WAAe,GAHciC,EAAAxD,OAAAgD,EAAA,EAAAhD,CAAAuD,EAAA,GAGlDE,EAHkDD,EAAA,GAG1CE,EAH0CF,EAAA,GAAAG,EAI7BpC,WAAe,GAJcqC,EAAA5D,OAAAgD,EAAA,EAAAhD,CAAA2D,EAAA,GAIlDE,EAJkDD,EAAA,GAI1CE,EAJ0CF,EAAA,GAAAG,EAK7BxC,WAAsB,GALOyC,EAAAhE,OAAAgD,EAAA,EAAAhD,CAAA+D,EAAA,GAKlDpC,EALkDqC,EAAA,GAK1CC,EAL0CD,EAAA,GAMzD,OAAKrD,EAIJnB,EAAA,yBACCA,EAAA,wBAAKmB,EAAMf,KAAX,qBACAJ,EAAA,mCACAA,EAAA,uBAAOf,KAAK,OAAOyF,MAAOjB,EAASkB,SAAU,SAAAC,GAAK,OAAIlB,EAAWkB,EAAMC,OAAOH,UAC9E1E,EAAA,uBAAOf,KAAK,QAAQmB,KAAK,SAASsE,MAAM,IAAII,QAAoB,IAAX3C,EAAcwC,SAAU,SAAAC,GAAK,MAA2B,MAAvBA,EAAMC,OAAOH,OAAiBD,EAAU,MAC9HzE,EAAA,mCACAA,EAAA,uBAAOf,KAAK,OAAOyF,MAAOb,EAASc,SAAU,SAAAC,GAAK,OAAId,EAAWc,EAAMC,OAAOH,UAC9E1E,EAAA,uBAAOf,KAAK,QAAQmB,KAAK,SAASsE,MAAM,IAAII,QAAoB,IAAX3C,EAAcwC,SAAU,SAAAC,GAAK,MAA2B,MAAvBA,EAAMC,OAAOH,OAAiBD,EAAU,MAC9HzE,EAAA,gCACAA,EAAA,uBAAOf,KAAK,SAASyF,MAAOT,EAAQU,SAAU,SAAAC,GAAK,OAAIV,EAAUzC,SAASmD,EAAMC,OAAOH,MAAO,QAT/F,KAUC1E,EAAA,uBAAOf,KAAK,SAASyF,MAAOL,EAAQM,SAAU,SAAAC,GAAK,OAAIN,EAAU7C,SAASmD,EAAMC,OAAOH,MAAO,QAC9F1E,EAAA,wBAAQ+E,QAAS,WAChBvC,EAAO,CACNN,QAAS,CAACuB,EAASI,GACnB1B,SACAC,MAAO,CAAC6B,EAAQI,IACdlD,EAAMhB,IACTkD,EAAQ2B,KAAR,UAAAzF,OAAuB4B,EAAMhB,OAN9B,SAdOH,EAAA,6CCgBKK,kBARf,SAAyBC,GACxB,MAAO,CACN2E,UAAW3E,EAAM2E,YAMJ5E,CAtBf,SAAaN,GACZ,OACCmF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEtF,EAAMkF,WAAaC,EAAAC,EAAAC,cAAA,yBACpBF,EAAAC,EAAAC,cAACnF,EAAA,EAAD,KACCiF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjCR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACC,UAAWE,IAC/CT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,gCAAgCC,OAAK,EAACC,UAAWG,IAC7DV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,sBAAsBC,OAAK,EAACC,UAAWI,gCCbjDC,EAAmB,CACxBpF,OAAQ,GACRuE,WAAW,EACXc,gBAAiB,MA+DlB,IACeC,EADDC,YAzDd,WAAuE,IAAtD3F,EAAsD4F,UAAAC,OAAA,QAAA7D,IAAA4D,UAAA,GAAAA,UAAA,GAAvCJ,EAAWM,EAA4BF,UAAAC,OAAA,EAAAD,UAAA,QAAA5D,EACtE,OAAQ8D,EAAOnH,MACd,KAAKsD,EACJ,IAAMpB,EAAQb,EAAMI,OAAOc,KAAK,SAAAL,GAAK,OAAIA,EAAMhB,KAAOiG,EAAOlH,QAAQyC,UACrE,IAAKR,EACJ,MAAM,IAAIkF,MAAM,gCAEjB,OAAO7F,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADJ,CAECI,OAAM,GAAAnB,OAAAiB,OAAA8F,EAAA,EAAA9F,CACFF,EAAMI,OAAO6F,MAAM,EAAGjG,EAAMI,OAAO8F,QAAQrF,KADzC,CAAAX,OAAAC,EAAA,EAAAD,CAAA,GAGDW,EAHC,CAIJa,MAAK,GAAAzC,OAAAiB,OAAA8F,EAAA,EAAA9F,CAAMW,EAAMa,OAAZ,CAAAxB,OAAAC,EAAA,EAAAD,CAAA,GACD4F,EAAOlH,QAAQ+C,KADd,CAEJ9B,GAAIsG,KAAKC,aANNlG,OAAA8F,EAAA,EAAA9F,CASFF,EAAMI,OAAO6F,MAAMjG,EAAMI,OAAO8F,QAAQrF,GAAS,OAGvD,KAAK3B,EACJ,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADJ,CAECI,OAAQ0F,EAAOlH,QAAQwB,OACvBuE,UAAW3E,EAAMyF,kBAAoBK,EAAOlH,QAAQF,KAAcsB,EAAM2E,UACxEc,gBAAiBzF,EAAMyF,kBAAoBK,EAAOlH,QAAQF,IAAM,KAAOsB,EAAMyF,kBAE/E,KAAKzE,EACJ,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADJ,CAECI,OAAS,WACR,IAAMS,EAAQb,EAAMI,OAAOc,KAAK,SAAAL,GAAK,OAAIA,EAAMhB,KAAOiG,EAAOlH,QAAQiC,MAAMhB,KAC3E,OAAIgB,EACH,GAAA5B,OAAAiB,OAAA8F,EAAA,EAAA9F,CACIF,EAAMI,OAAO6F,MAAM,EAAGjG,EAAMI,OAAO8F,QAAQrF,KAD/C,CAECiF,EAAOlH,QAAQiC,OAFhBX,OAAA8F,EAAA,EAAA9F,CAGIF,EAAMI,OAAO6F,MAAMjG,EAAMI,OAAO8F,QAAQrF,GAAS,KAG9Cb,EAAMI,OAAOnB,OAAO6G,EAAOlH,QAAQiC,OATnC,GAYT8D,UAAW3E,EAAMyF,kBAAoBK,EAAOlH,QAAQF,KAAcsB,EAAM2E,UACxEc,gBAAiBzF,EAAMyF,kBAAoBK,EAAOlH,QAAQF,IAAM,KAAOsB,EAAMyF,kBAE/E,KAAKjH,EACJ,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADJ,CAEC2E,WAAW,EACXc,gBAAiBK,EAAOlH,UAE1B,QACC,OAAOoB,IAIyBqG,YAAgBC,MCpEnDC,IAASC,OACR5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUf,MAAOA,GAChBd,EAAAC,EAAAC,cAAC4B,EAAD,OAECC,SAASC,eAAe","file":"static/js/main.b527ef01.chunk.js","sourcesContent":["export const FETCH_START = 'FETCH_START';\n\nexport interface FetchStartAction {\n\ttype: typeof FETCH_START,\n\tpayload: string\n}\n\nexport default function fetchStart(url: string) {\n\treturn {\n\t\ttype: 'FETCH_START',\n\t\tpayload: url\n\t}\n}","export default function getUrl(url: string) {\n\treturn window.location.hostname === 'localhost' ? `http://localhost:3000${url}` : `https://eloquent-server.herokuapp.com${url}`;\n}","import { Dispatch } from \"redux\";\nimport { Group } from \"../types\";\nimport fetchStart from \"./FetchStartAction\";\nimport getUrl from \"../getUrl\";\n\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\nexport const GROUPS_URL = getUrl('/groups');\n\nexport interface FetchGroupsAction {\n\ttype: typeof FETCH_GROUPS,\n\tpayload: {\n\t\turl: string,\n\t\tgroups: Group[]\n\t}\n}\n\nexport default function fetchGroups() {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(fetchStart(GROUPS_URL))\n\t\tfetch(GROUPS_URL)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'FETCH_GROUPS',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\turl: GROUPS_URL,\n\t\t\t\t\t\tgroups: response\n\t\t\t\t\t}\n\t\t\t\t})\t\n\t\t\t})\n\t};\n}","import * as React from 'react';\nimport { Group } from '../types';\nimport styled from 'styled-components';\nimport variables from '../style-variables';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.li`\n\tborder: 1px solid ${variables.orange};\n`\n\nexport default function GroupComponent(props: Group) {\n\treturn (\n\t\t<Container>\n\t\t\t<Link to={`/group/${props.id}`}>{props.name}</Link>\n\t\t</Container>\n\t)\n}","export default {\n\torange: '#fa7722'\n}","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { State, Group } from '../types';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport fetchGroups from '../actions/FetchGroupsAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { useEffect } from 'react';\nimport GroupComponent from '../components/GroupComponent';\n\ninterface Props {\n\tgroups: Group[],\n\tgetGroups: () => void\n};\n\nfunction SelectGroupScreen(props: Props) {\n\tuseEffect(() => props.getGroups(), [])\n\treturn (\n\t\t<ul>\n\t\t\t{props.groups.map(group => (\n\t\t\t\t<GroupComponent key={group.id} {...group} />\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\treturn {\n\t\t...ownProps,\n\t\tgroups: state.groups,\n\t\t\n\t}\n}\n\nfunction matchDispatchToProps(dispatch: ThunkDispatch<{}, {}, any>, ownProps: Props) {\n\treturn {\n\t\t...ownProps,\n\t\tgetGroups: () => dispatch(fetchGroups())\n\t}\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(SelectGroupScreen);","import { Dispatch } from \"redux\";\nimport { Group } from \"../types\";\nimport fetchStart from \"./FetchStartAction\";\nimport getUrl from \"../getUrl\";\n\nexport const FETCH_GROUP = 'FETCH_GROUP';\n\nexport interface FetchGroupAction {\n\ttype: typeof FETCH_GROUP,\n\tpayload: {\n\t\turl: string,\n\t\tgroup: Group\n\t}\n}\n\nexport default function fetchGroup(id: string) {\n\tconst url = getUrl(`/groups/${id}`)\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(fetchStart(url))\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'FETCH_GROUP',\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tgroup: response\n\t\t\t\t\t}\n\t\t\t\t})\t\n\t\t\t})\n\t};\n}","import * as React from 'react';\nimport { Link, match } from 'react-router-dom';\nimport { State, Group } from '../types';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport fetchGroup from '../actions/FetchGroupAction';\n\ninterface Props {\n\tmatch: match<{ groupId: string }>,\n\tgroup?: Group,\n\tgetGroup: () => void\n};\n\nfunction GameListScreen({ group, getGroup }: Props) {\n\tReact.useEffect(() => getGroup(), [])\n\tif (!group) {\n\t\treturn (<h1>Group not found</h1>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{group.name}</h1>\n\t\t\t<ul>\n\t\t\t\t{group.games.map(game => (\n\t\t\t\t\t<li key={game.id}>\n\t\t\t\t\t\t{game.players[0]}{game.winner === 0 && '(w)'} {game.score && game.score[0]} -\n\t\t\t\t\t\t{game.score && game.score[1]} {game.players[1]}{game.winner === 1 && '(w)'} \n\t\t\t\t\t\t<Link to={`/group/${group.id}/games/${game.id}`}>Details</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\n\t\t\t<Link to={`/group/${group.id}/add`}>Add new game</Link>\n\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\treturn {\n\t\t...ownProps,\n\t\tmatch: ownProps.match,\n\t\tgroup: state.groups.find(group => group.id === parseInt(ownProps.match.params.groupId, 10))\n\t}\n}\n\nfunction matchDispatchToProps(dispatch: ThunkDispatch<{}, {}, any>, ownProps: Props) {\n\treturn {\n\t\t...ownProps,\n\t\tgetGroup: () => dispatch(fetchGroup(ownProps.match.params.groupId))\n\t}\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(GameListScreen);","import * as React from 'react';\nimport { match } from 'react-router-dom';\nimport { State, Group, Game } from '../types';\nimport { connect } from 'react-redux';\n\ninterface Props {\n\tmatch: match<{ groupId: string, gameId: string }>,\n\tgroup?: Group,\n\tgame?: Game\n};\n\nfunction GameDetailsScreen({ group, game }: Props) {\n\tif (!group || !game) {\n\t\treturn (<h1>Game not found</h1>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{group.name} - Game details</h1>\n\t\t\t<li key={game.id}>\n\t\t\t\t{game.players[0]}{game.winner === 0 && '(w)'} {game.score && game.score[0]} -\n\t\t\t\t\t\t{game.score && game.score[1]} {game.players[1]}{game.winner === 1 && '(w)'}\n\t\t\t</li>\n\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\tconst group = state.groups.find(group => group.id === parseInt(ownProps.match.params.groupId));\n\tconst game = group ? group.games.find(game => game.id === parseInt(ownProps.match.params.gameId)) : undefined;\n\treturn {\n\t\tmatch: ownProps.match,\n\t\tgroup,\n\t\tgame \n\t};\n}\n\nexport default connect(mapStateToProps)(GameDetailsScreen);","import { NewGame } from \"../types\";\nimport fetchStart from \"./FetchStartAction\";\nimport { Dispatch } from \"redux\";\nimport getUrl from \"../getUrl\";\n\nexport const SAVE_GAME = 'SAVE_GAME';\n\nexport interface SaveGameAction {\n\ttype: typeof SAVE_GAME\n\tpayload: {\n\t\tgame: NewGame,\n\t\tgroupId: number\n\t}\n}\n\nexport default function saveGame(game: NewGame, groupId: number) {\n\tconst url = getUrl(`/groups/${groupId}/add`);\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(fetchStart(url))\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\t...game,\n\t\t\t\tid: 3\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log('hello')\n\t\t\t})\n\t\t\t.catch(message => alert(message))\n\t};\n}","import * as React from 'react';\nimport { State, Group, NewGame } from '../types';\nimport { connect } from 'react-redux';\nimport saveGame from '../actions/SaveGameAction';\nimport { RouteChildrenProps } from 'react-router';\nimport { ThunkDispatch } from 'redux-thunk';\n\ninterface Props extends RouteChildrenProps<{ groupId: string }> {\n\tgroup?: Group,\n\tonSave: (game: NewGame, groupId: number) => void \n};\n\nfunction AddGameScreen({ group, onSave, history }: Props) {\n\tconst [player1, setPlayer1] = React.useState('');\n\tconst [player2, setPlayer2] = React.useState('');\n\tconst [score1, setScore1] = React.useState(0);\n\tconst [score2, setScore2] = React.useState(0);\n\tconst [winner, setWinner] = React.useState<0 | 1>(0);\n\tif (!group) {\n\t\treturn (<h1>Group not found</h1>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{group.name} - Add a new game</h1>\n\t\t\t<p>Player 1</p>\n\t\t\t<input type=\"text\" value={player1} onChange={event => setPlayer1(event.target.value)} />\n\t\t\t<input type=\"radio\" name=\"winner\" value=\"0\" checked={winner === 0} onChange={event => event.target.value === '0' && setWinner(0)} />\n\t\t\t<p>Player 2</p>\n\t\t\t<input type=\"text\" value={player2} onChange={event => setPlayer2(event.target.value)} />\n\t\t\t<input type=\"radio\" name=\"winner\" value=\"1\" checked={winner === 1} onChange={event => event.target.value === '1' && setWinner(1)} />\n\t\t\t<p>Score</p>\n\t\t\t<input type=\"number\" value={score1} onChange={event => setScore1(parseInt(event.target.value, 10))} /> - \n\t\t\t<input type=\"number\" value={score2} onChange={event => setScore2(parseInt(event.target.value, 10))} />\n\t\t\t<button onClick={() => {\n\t\t\t\tonSave({\n\t\t\t\t\tplayers: [player1, player2],\n\t\t\t\t\twinner,\n\t\t\t\t\tscore: [score1, score2]\n\t\t\t\t}, group.id)\n\t\t\t\thistory.push(`/group/${group.id}`);\n\t\t\t}}>Save</button>\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state: State, ownProps: Props): Props {\n\treturn {\n\t\t...ownProps,\n\t\tgroup: state.groups.find(group => ownProps.match && group.id === parseInt(ownProps.match.params.groupId, 10)),\n\t\tonSave: ownProps.onSave\n\t}\n}\n\nfunction matchDispatchToProps(dispatch: ThunkDispatch<{}, {}, any>, ownProps: Props) {\n\treturn {\n\t\tonSave: (game: NewGame) => dispatch(saveGame(game, ownProps.match && parseInt(ownProps.match.params.groupId) || 0))\n\t}\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(AddGameScreen);","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport SelectGroupScreen from './screens/SelectGroupScreen';\nimport GameListScreen from './screens/GameListScreen';\nimport GameDetailsScreen from './screens/GameDetailsScreen';\nimport AddGameScreen from './screens/AddGameScreen';\nimport { State } from './types';\nimport { connect } from 'react-redux';\n\ntype Props = {\n\tisLoading: boolean\n}\n\nfunction App(props: Props) {\n\treturn (\n\t\t<>\n\t\t\t{props.isLoading && <div>Loading...</div>}\n\t\t\t<Router>\n\t\t\t\t<Route path=\"/\" exact component={SelectGroupScreen} />\n\t\t\t\t<Route path=\"/group/:groupId\" exact component={GameListScreen} />\n\t\t\t\t<Route path=\"/group/:groupId/games/:gameId\" exact component={GameDetailsScreen} />\t\t\n\t\t\t\t<Route path=\"/group/:groupId/add\" exact component={AddGameScreen} />\t\t\n\t\t\t</Router>\n\t\t</>\n\t)\n}\n\nfunction mapStateToProps(state: State): Props {\n\treturn {\n\t\tisLoading: state.isLoading\n\t}\n}\n\n\n\nexport default connect(mapStateToProps)(App);","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport { State } from './types';\nimport { SaveGameAction, SAVE_GAME } from './actions/SaveGameAction';\nimport { FETCH_GROUPS, FetchGroupsAction } from './actions/FetchGroupsAction';\nimport { FetchStartAction, FETCH_START } from './actions/FetchStartAction';\nimport { FETCH_GROUP, FetchGroupAction } from './actions/FetchGroupAction';\n\nconst dummyData: State = {\n\tgroups: [],\n\tisLoading: false,\n\tloadingResource: null\n}\n\ntype ActionTypes = SaveGameAction | FetchGroupsAction | FetchStartAction | FetchGroupAction;\n\t\n\nfunction reducer(state: State = dummyData, action: ActionTypes): State {\n\tswitch (action.type) {\n\t\tcase SAVE_GAME:\n\t\t\tconst group = state.groups.find(group => group.id === action.payload.groupId);\n\t\t\tif (!group) {\n\t\t\t\tthrow new Error('Didn\\'t find group in reducer');\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgroups: [\n\t\t\t\t\t...state.groups.slice(0, state.groups.indexOf(group)),\n\t\t\t\t\t{\n\t\t\t\t\t\t...group,\n\t\t\t\t\t\tgames: [...group.games, {\n\t\t\t\t\t\t\t...action.payload.game,\n\t\t\t\t\t\t\tid: Date.now()\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t\t...state.groups.slice(state.groups.indexOf(group) + 1)\n\t\t\t\t]\n\t\t\t};\n\t\tcase FETCH_GROUPS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgroups: action.payload.groups,\n\t\t\t\tisLoading: state.loadingResource === action.payload.url ? false : state.isLoading,\n\t\t\t\tloadingResource: state.loadingResource === action.payload.url ? null : state.loadingResource\n\t\t\t}\n\t\tcase FETCH_GROUP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgroups: (() => {\n\t\t\t\t\tconst group = state.groups.find(group => group.id === action.payload.group.id);\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t...state.groups.slice(0, state.groups.indexOf(group)),\n\t\t\t\t\t\t\taction.payload.group,\n\t\t\t\t\t\t\t...state.groups.slice(state.groups.indexOf(group) + 1)\n\t\t\t\t\t\t]\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn state.groups.concat(action.payload.group)\n\t\t\t\t\t}\n\t\t\t\t})(),\n\t\t\t\tisLoading: state.loadingResource === action.payload.url ? false : state.isLoading,\n\t\t\t\tloadingResource: state.loadingResource === action.payload.url ? null : state.loadingResource\n\t\t\t}\n\t\tcase FETCH_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true,\n\t\t\t\tloadingResource: action.payload\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nReactDOM.render((\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n), document.getElementById('root'));\n\n"],"sourceRoot":""}